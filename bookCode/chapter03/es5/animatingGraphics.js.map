{"version":3,"sources":["../es6/animatingGraphics.js"],"names":[],"mappings":";;;AACA,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS;IAC5B,kBAAkB,GAAG,IAAI,CAAC,kBAAkB;IAC5C,MAAM,GAAG,IAAI,CAAC,MAAM;IACpB,MAAM,GAAG,IAAI,CAAC,MAAM;IACpB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;;;AAG3B,IAAI,KAAK,GAAG,IAAI,SAAS,EAAE;IACzB,QAAQ,GAAG,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;;AAGzC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,kBAAkB,CAAC;AAChD,QAAQ,CAAC,eAAe,GAAG,UAAU,CAAC;;;AAGtC,IAAI,KAAK,GAAG,IAAI,CAAC;;;AAGjB,IAAI,IAAI,YAAA,CAAC;;;AAGT,KAAK,EAAE,CAAC;;AAER,SAAS,KAAK,GAAG;;AAEf,MAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;AACtB,OAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;AAErB,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAChB,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;;AAGhB,UAAQ,EAAE,CAAC;CACZ;;AAED,SAAS,QAAQ,GAAE;;;AAGjB,uBAAqB,CAAC,QAAQ,CAAC,CAAC;;;AAGhC,OAAK,EAAE,CAAC;;;AAGR,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;CACxB;;AAED,SAAS,IAAI,GAAG;;;;;;AAMd,MAAI,CAAC,MAAM,IAAI,IAAI,CAAC;AACpB,MAAI,SAAS,GAAG,iBAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;;;AAG/D,MAAI,CAAC,MAAM,IAAI,IAAI,CAAC;AACpB,MAAI,SAAS,GAAG,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;;;AAGjE,MAAI,CAAC,KAAK,EAAE,CAAC;;;AAGb,MAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAQ,EAAE,CAAC,CAAC,CAAC;AAC/B,MAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AACtC,MAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;CACvC;;AAED,SAAS,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE;AACvE,MAAI,KAAK,GAAG,EAAE,CAAC;AACf,OAAK,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;AAC/C,OAAK,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;AAC/C,SAAO,KAAK,CAAC;CACb","file":"animatingGraphics.js","sourcesContent":["//Aliases\nlet Container = PIXI.Container,\n  autoDetectRenderer = PIXI.autoDetectRenderer,\n  loader = PIXI.loader,\n  Sprite = PIXI.Sprite,\n  Graphics = PIXI.Graphics;\n\n//Create a Pixi stage and renderer\nlet stage = new Container(),\n  renderer = autoDetectRenderer(256, 256);\ndocument.body.appendChild(renderer.view);\n\n//Set the canvas's border style and background color\nrenderer.view.style.border = \"1px dashed black\";\nrenderer.backgroundColor = \"0xFFFFFF\";\n\n//Set the initial game state\nlet state = play;\n\n//Define any variables that are used in more than one function\nlet line;\n\n//Run the `setup` function\nsetup();\n\nfunction setup() {\n\n  line = new Graphics();\n  stage.addChild(line);\n\n  line.angleA = 0;\n  line.angleB = 0;\n\n  //Start the game loop\n  gameLoop();\n}\n\nfunction gameLoop(){\n\n  //Loop this function 60 times per second\n  requestAnimationFrame(gameLoop);\n\n  //Run the current state\n  state();\n\n  //Render the stage\n  renderer.render(stage);\n}\n\nfunction play() {\n\n  //Make the line's start point rotate clockwise around\n  //x/y point 64, 64. `rotateAroundPoint` returns an\n  //object with `x` and `y` properties\n  //containing the point's new rotated position\n  line.angleA += 0.02;\n  let rotatingA = rotateAroundPoint(64, 64, 20, 20, line.angleA);\n\n  //Make the line's end point rotate counter-clockwise around x/y point 192, 208\n  line.angleB -= 0.03;\n  let rotatingB = rotateAroundPoint(192, 208, 20, 20, line.angleB);\n\n  //Clear the line to reset it from the previous frame\n  line.clear();\n\n  //Draw the line using the rotating points as start and end points\n  line.lineStyle(4, 0x000000, 1);\n  line.moveTo(rotatingA.x, rotatingA.y);\n  line.lineTo(rotatingB.x, rotatingB.y);\n}\n\nfunction rotateAroundPoint(pointX, pointY, distanceX, distanceY, angle) {\n let point = {};\n point.x = pointX + Math.cos(angle) * distanceX;\n point.y = pointY + Math.sin(angle) * distanceY;\n return point;\n}\n\n"]}