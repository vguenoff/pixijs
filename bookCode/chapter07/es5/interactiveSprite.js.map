{"version":3,"sources":["../es6/interactiveSprite.js"],"names":[],"mappings":"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","file":"interactiveSprite.js","sourcesContent":["//Aliases\nlet Container = PIXI.Container,\n  autoDetectRenderer = PIXI.autoDetectRenderer,\n  Graphics = PIXI.Graphics,\n  Sprite = PIXI.Sprite,\n  Text = PIXI.Text;\n\n//Create a Pixi stage and renderer\nlet stage = new Container(),\n  renderer = autoDetectRenderer(256, 256);\ndocument.body.appendChild(renderer.view);\n\n//Set the canvas's border style and background color\nrenderer.view.style.border = \"1px dashed black\";\nrenderer.backgroundColor = \"0xFFFFFF\";\n\n//let scale = scaleToWindow(renderer.view);\n\n//Set the initial game state\nlet state = play;\n\n//Define any variables that are used in more than one function\nlet t, circle;\n\nsetup();\n \nfunction setup() {\n\n  //Create a new instance of Tink\n  t = new Tink(PIXI, renderer.view);\n\n  let circleGraphic = new Graphics();\n  circleGraphic.beginFill(0xFF0000);\n  circleGraphic.lineStyle(8, 0x006600, 1);\n  circleGraphic.drawCircle(0, 0, 64);\n  circleGraphic.endFill();\n\n  //If you want the graphic to be anti-aliased,\n  //convert it into a bitmap texture and then use\n  //that texture to create a new sprite\n  let circleTexture = circleGraphic.generateTexture();\n  circle = new Sprite(circleTexture);\n  circle.x = 64;\n  circle.y = 64;\n  stage.addChild(circle);\n\n  //Add a `circular` property to the circle\n  circle.circular = true;\n\n  //Make the circle interactive\n  t.makeInteractive(circle);\n\n  //Create variables that reference hexadecimal\n  //color values\n  let red = 0xFF0000,\n      green = 0x006600,\n      orange = 0xFF9933,\n      blue = 0x336699,\n      yellow = 0xFFFF00;\n\n  //Create an array of all the colors\n  let colors = [red, green, orange, blue, yellow];\n\n  //Assign the ball's `press` method\n  circle.press = () => {\n    updateCircle(\n      circle,\n      colors[randomInt(0, 3)],\n      colors[randomInt(0, 3)]\n    );\n  };\n\n  //Start the game loop\n  gameLoop();\n}\n\nfunction gameLoop(){\n\n  //Loop this function 60 times per second\n  requestAnimationFrame(gameLoop);\n\n  //Run the current state\n  state();\n\n  //Update Tink\n  t.update();\n\n  //Render the stage\n  renderer.render(stage);\n}\n\nfunction play() {\n\n}\n\n//The `randomInt` helper function\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n//A helper function that draws circle shape, turns it into a \n//texture, and applies the texture to the sprite\nfunction updateCircle(sprite, fillColor, strokeColor) {\n\n  let circleGraphic = new Graphics();\n  circleGraphic.beginFill(fillColor);\n  circleGraphic.lineStyle(8, strokeColor, 1);\n  circleGraphic.drawCircle(0, 0, 64);\n  circleGraphic.endFill();\n  let circleTexture = circleGraphic.generateTexture();\n  sprite.texture = circleTexture; \n}\n\n"]}