{"version":3,"sources":["../es6/button.js"],"names":[],"mappings":"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","file":"button.js","sourcesContent":["//Aliases\nlet Container = PIXI.Container,\n  autoDetectRenderer = PIXI.autoDetectRenderer,\n  Sprite = PIXI.Sprite,\n  loader = PIXI.loader,\n  resources = PIXI.loader.resources,\n  Text = PIXI.Text;\n\n//Create a Pixi stage and renderer\nlet stage = new Container(),\n  renderer = autoDetectRenderer(256, 256);\ndocument.body.appendChild(renderer.view);\n\n//Set the canvas's border style and background color\nrenderer.view.style.border = \"1px dashed black\";\nrenderer.backgroundColor = \"0xFFFFFF\";\n\n//let scale = scaleToWindow(renderer.view);\n\n//load resources\nloader\n  .add(\"images/button.json\")\n  .load(setup);\n\n//Set the initial game state\nlet state = play;\n\n//Define any variables that are used in more than one function\nlet t, playButton, id, stateMessage, actionMessage;\n \nfunction setup() {\n\n  //Create a new instance of Tink\n  t = new Tink(PIXI, renderer.view);\n\n  //Get a reference to the texture atlas id's\n  id = resources[\"images/button.json\"].textures;\n\n  //The button state textures\n  let buttonFrames = [\n    id[\"up.png\"],\n    id[\"over.png\"],\n    id[\"down.png\"]\n  ];\n\n  //The `playButton`\n  playButton = t.button(buttonFrames, 32, 96);\n\n  //Add the button to the stage\n  stage.addChild(playButton);\n\n  //Define the button's actions\n  playButton.over = () => console.log(\"over\");\n  playButton.out = () => console.log(\"out\");\n  playButton.press = () => console.log(\"pressed\");\n  playButton.release = () => console.log(\"released\");\n  playButton.tap = () => console.log(\"tapped\");\n\n  //Add the `stageMessage`\n  stateMessage = new Text(\n    \"State: \", \n    {font: \"18px Futura\", fill: \"black\"}\n  );\n  stateMessage.position.set(8, 8);\n  stage.addChild(stateMessage);\n\n  //Add the `actionMessage`\n  actionMessage = new Text(\n    \"Action: \", \n    {font: \"18px Futura\", fill: \"black\"}\n  );\n  actionMessage.position.set(8, 32);\n  stage.addChild(actionMessage);\n\n  //Optionally create a `pointer` object\n  //pointer = t.makePointer();\n\n  //Start the game loop\n  gameLoop();\n}\n\nfunction gameLoop(){\n\n  //Loop this function 60 times per second\n  requestAnimationFrame(gameLoop);\n\n  //Run the current state\n  state();\n\n  //Update Tink\n  t.update();\n\n  //Render the stage\n  renderer.render(stage);\n}\n\nfunction play() {\n  stateMessage.text = `State: ${playButton.state}`;\n  actionMessage.text = `Action: ${playButton.action}`;\n}\n"]}