{"version":3,"sources":["../es6/tweening.js"],"names":[],"mappings":";;;AACA,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS;IAC5B,kBAAkB,GAAG,IAAI,CAAC,kBAAkB;IAC5C,MAAM,GAAG,IAAI,CAAC,MAAM;IACpB,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY;IACtC,OAAO,GAAG,IAAI,CAAC,OAAO;IACtB,MAAM,GAAG,IAAI,CAAC,MAAM;IACpB,aAAa,GAAG,IAAI,CAAC,aAAa;IAClC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS;IACjC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;;;AAG1C,IAAI,KAAK,GAAG,IAAI,SAAS,EAAE;IACzB,QAAQ,GAAG,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;;AAGzC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,kBAAkB,CAAC;AAChD,QAAQ,CAAC,eAAe,GAAG,UAAU,CAAC;;;AAGtC,MAAM,CACH,GAAG,CAAC,uBAAuB,CAAC,CAC5B,IAAI,CAAC,KAAK,CAAC,CAAC;;;AAGf,IAAI,KAAK,GAAG,IAAI,CAAC;;;AAGjB,IAAI,KAAK,YAAA;IAAE,CAAC,YAAA,CAAC;;AAEb,SAAS,KAAK,GAAG;;;AAGf,GAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;AACpB,OAAK,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC,OAAO,CAAC,CAAC;AAC/D,OAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC3B,OAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;;;;;;;AAQtB,MAAI,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;AACnE,YAAU,CAAC,UAAU,GAAG;WAAM,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;GAAA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwElE,UAAQ,EAAE,CAAC;CACZ;;AAED,SAAS,QAAQ,GAAE;;;AAGjB,uBAAqB,CAAC,QAAQ,CAAC,CAAC;;;AAGhC,OAAK,EAAE,CAAC;;;AAGR,GAAC,CAAC,MAAM,EAAE,CAAC;;;AAGX,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;CACxB;;AAED,SAAS,IAAI,GAAG,EAEf","file":"tweening.js","sourcesContent":["//Aliases\nlet Container = PIXI.Container,\n  autoDetectRenderer = PIXI.autoDetectRenderer,\n  loader = PIXI.loader,\n  TextureCache = PIXI.utils.TextureCache,\n  Texture = PIXI.Texture,\n  Sprite = PIXI.Sprite,\n  RenderTexture = PIXI.RenderTexture,\n  resources = PIXI.loader.resources,\n  TilingSprite = PIXI.extras.TilingSprite;\n\n//Create a Pixi stage and renderer\nlet stage = new Container(),\n  renderer = autoDetectRenderer(256, 256);\ndocument.body.appendChild(renderer.view);\n\n//Set the canvas's border style and background color\nrenderer.view.style.border = \"1px dashed black\";\nrenderer.backgroundColor = \"0xFFFFFF\";\n\n//load resources (images and fonts)\nloader\n  .add(\"images/pixie96x48.png\")\n  .load(setup);\n\n//Set the initial game state\nlet state = play;\n\n//Define any variables that are used in more than one function\nlet pixie, c;\n\nfunction setup() {\n\n  //Create a new instance of Charm\n  c = new Charm(PIXI);\n  pixie = new Sprite(resources[\"images/pixie96x48.png\"].texture);\n  pixie.position.set(32, 32);\n  stage.addChild(pixie);\n\n  /* Tween effects */\n\n  //Selectively un-comment the tween effects below to observe their\n  //effects. The first, slide, is a fun one!\n\n  //Slide\n  let slidePixie = c.slide(pixie, 128, 128, 120, \"smoothstep\", true);\n  slidePixie.onComplete = () => console.log(\"Pixie slide complete\");\n\n  //Add some bounce to the slide like this (Make sure to comment-out\n  //the 2 lines of code above first): \n  /*\n  let slidePixie = c.slide(pixie, 128, 128, 120, \"bounce 10 -10\", true);\n  slidePixie.onComplete = () => console.log(\"Pixie slide complete\");\n  */\n\n  //Fade out\n  //c.fadeOut(pixie);\n  \n  //Fade in\n  //pixie.alpha = 0;\n  //c.fadeIn(pixie);\n  \n  //Pulse\n  //c.pulse(pixie, 30, 0.2);\n  \n\n  //followCurve\n  /*\n  pixie.position.set(64, 160);\n  pixie.anchor.set(0.5, 0.5);\n\n  //Define the curve as a 2D array of x/y points\n  let curve = [\n    [pixie.x, pixie.y],   //Start position\n    [108, 32],            //Control point 1\n    [176, 32],            //Control point 2\n    [196, 160]            //End position\n  ];\n\n  //Use `followCurve` to make the sprite follow the curve\n  let pixieBezier = c.followCurve(\n    pixie,                          //The sprite\n    curve,                          //The Bezier curve array\n    120,                            //Duration, in milliseconds\n    \"smoothstep\",                   //Easing type\n    true,                           //Should tween yoyo?\n    1000                            //Delay, in ms, before it yoyos\n  );\n  pixieBezier.onComplete = () => console.log(\"Cat Bezier complete\")\n  */\n\n  //Breathe\n  //Set the pixie's anchor point to the center\n  /*\n  pixie.anchor.set(0.5, 0.5);\n  pixie.position.set(64, 64);\n  c.breathe(pixie);\n  */\n\n  //Scale\n  //c.scale(pixie);\n\n  //Strobe\n  //Set the pixie's anchor point to the center\n  /*\n  pixie.anchor.set(0.5, 0.5);\n  pixie.position.set(64, 64);\n  c.strobe(pixie);\n  */\n\n  //Wobble\n  /*\n  pixie.anchor.set(0.5, 0.5);\n  pixie.position.set(64, 64);\n  c.wobble(pixie);\n  */\n\n  //Start the game loop\n  gameLoop();\n}\n\nfunction gameLoop(){\n\n  //Loop this function 60 times per second\n  requestAnimationFrame(gameLoop);\n\n  //Run the current state\n  state();\n\n  //Update all the tweens\n  c.update();\n\n  //Render the stage\n  renderer.render(stage);\n}\n\nfunction play() {\n\n}\n\n"]}