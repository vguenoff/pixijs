{"version":3,"sources":["../es6/treasureHunter2.js"],"names":[],"mappings":"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","file":"treasureHunter2.js","sourcesContent":["//Aliases\nlet Container = PIXI.Container,\n  autoDetectRenderer = PIXI.autoDetectRenderer,\n  loader = PIXI.loader,\n  Sprite = PIXI.Sprite,\n  Text = PIXI.Text,\n  Graphics = PIXI.Graphics;\n\n//Create a Pixi stage and renderer \nlet stage = new Container(),\n  renderer = autoDetectRenderer(512, 512);\ndocument.body.appendChild(renderer.view);\n\n//Set the canvas's border style and background color\nrenderer.view.style.border = \"1px dashed black\";\nrenderer.backgroundColor = \"0xFFFFFF\";\n\n//load an image and run the `setup` function when it's done\nloader\n  .add(\"images/treasureHunter.json\")\n  .add(\"images/adventuress.png\")\n  .load(setup);\n\n//Define any variables that are used in more than one function\nlet state, player, treasure, blobs, chimes, exit, adventuress,\n    healthBar, message, gameScene, dungeon, door,\n    gameOverScene, enemies, su, b;\n\nfunction setup() {\n\n  //Create a new instance of SpriteUtilities\n  su = new SpriteUtilities(PIXI);\n\n  //Create a new instance of Bump\n  b = new Bump();\n\n  //Make the game scene and add it to the stage\n  gameScene = new Container();\n  stage.addChild(gameScene);\n\n  //Make the sprites and add them to the `gameScene`\n\n  //Dungeon\n  dungeon = su.sprite(\"dungeon.png\");\n  gameScene.addChild(dungeon);\n\n  //Door\n  door = su.sprite(\"door.png\"); \n  door.position.set(32, 0);\n  gameScene.addChild(door);\n\n  //Adventuress\n  let frames = su.filmstrip(\"images/adventuress.png\", 32, 32);  \n  adventuress = su.sprite(frames);\n  adventuress.x = 68;\n  adventuress.y = gameScene.height / 2 - adventuress.height / 2;\n  adventuress.vx = 0;\n  adventuress.vy = 0;\n  gameScene.addChild(adventuress);\n\n  //The adventuress's animation states\n  adventuress.states = {\n    down: 0,\n    left: 3,\n    right: 6,\n    up: 9,\n    walkDown: [0, 2],\n    walkLeft: [3, 5],\n    walkRight: [6, 8],\n    walkUp: [9, 11]\n  };\n\n  //Treasure\n  treasure = su.sprite(\"treasure.png\");\n  treasure.x = gameScene.width - treasure.width - 48;\n  treasure.y = gameScene.height / 2 - treasure.height / 2;\n  gameScene.addChild(treasure);\n\n  //Make the blobs\n  let numberOfBlobs = 6,\n      spacing = 48,\n      xOffset = 150,\n      speed = 2,\n      direction = 1;\n\n  //An array to store all the blob monsters\n  blobs = [];\n\n  //Make as many blobs as there are `numberOfBlobs`\n  for (let i = 0; i < numberOfBlobs; i++) {\n\n    //Make a blob\n    let blob = su.sprite(\"blob.png\");\n\n    //Space each blob horizontally according to the `spacing` value.\n    //`xOffset` determines the point from the left of the screen\n    //at which the first blob should be added\n    let x = spacing * i + xOffset;\n\n    //Give the blob a random y position\n    let y = randomInt(0, stage.height - blob.height);\n\n    //Set the blob's position\n    blob.x = x;\n    blob.y = y;\n\n    //Set the blob's vertical velocity. `direction` will be either `1` or\n    //`-1`. `1` means the enemy will move down and `-1` means the blob will\n    //move up. Multiplying `direction` by `speed` determines the blob's\n    //vertical direction\n    blob.vy = speed * direction;\n\n    //Reverse the direction for the next blob\n    direction *= -1;\n\n    //Push the blob into the `blobs` array\n    blobs.push(blob);\n\n    //Add the blob to the `gameScene`\n    gameScene.addChild(blob);\n  }\n\n  //Create the health bar\n  healthBar = new Container();\n  healthBar.position.set(stage.width - 170, 4);\n  gameScene.addChild(healthBar);\n\n  //Create the black background rectangle\n  let innerBar = new Graphics();\n  innerBar.beginFill(0x000000);\n  innerBar.drawRect(0, 0, 128, 8);\n  innerBar.endFill();\n  healthBar.addChild(innerBar);\n\n  //Create the front red rectangle\n  let outerBar = new Graphics();\n  outerBar.beginFill(0xFF3300);\n  outerBar.drawRect(0, 0, 128, 8);\n  outerBar.endFill();\n  healthBar.addChild(outerBar);\n\n  healthBar.outer = outerBar;\n\n  //Create the `gameOver` scene\n  gameOverScene = new Container();\n  stage.addChild(gameOverScene);\n\n  //Make the `gameOver` scene invisible when the game first starts\n  gameOverScene.visible = false;\n  //gameScene.visible = false;\n\n  //Create the text sprite and add it to the `gameOver` scene\n  message = new Text(\n    \"The End!\", \n    {font: \"48px Futura\"}\n  );\n  message.x = 120;\n  message.y = stage.height / 2 - 32;\n  gameOverScene.addChild(message);\n\n  //Capture the keyboard arrow keys\n  let left = keyboard(37),\n      up = keyboard(38),\n      right = keyboard(39),\n      down = keyboard(40);\n\n  //Left arrow key `press` method\n  left.press = () => {\n\n    //Play the sprite's `walkLeft` sequence and set the elf's velocity\n    adventuress.playAnimation(adventuress.states.walkLeft);\n    adventuress.vx = -5;\n    adventuress.vy = 0;\n  };\n\n  //Left arrow key `release` method\n  left.release = () => {\n\n    //If the left arrow has been released, and the right arrow isn't down,\n    //and the adventuress isn't moving vertically, stop the sprite from moving\n    //by setting its velocity to zero\n    if (!right.isDown && adventuress.vy === 0) {\n      adventuress.vx = 0;\n      adventuress.show(adventuress.states.left);\n    }\n  };\n\n  //Up\n  up.press = () => {\n    adventuress.playAnimation(adventuress.states.walkUp);\n    adventuress.vy = -5;\n    adventuress.vx = 0;\n  };\n  up.release = () => {\n    if (!down.isDown && adventuress.vx === 0) {\n      adventuress.vy = 0;\n      adventuress.show(adventuress.states.up);\n    }\n  };\n\n  //Right\n  right.press = () => {\n    adventuress.playAnimation(adventuress.states.walkRight);\n    adventuress.vx = 5;\n    adventuress.vy = 0;\n  };\n  right.release = () => {\n    if (!left.isDown && adventuress.vy === 0) {\n      adventuress.vx = 0;\n      adventuress.show(adventuress.states.right);\n    }\n  };\n\n  //Down\n  down.press = () => {\n    adventuress.playAnimation(adventuress.states.walkDown);\n    adventuress.vy = 5;\n    adventuress.vx = 0;\n  };\n  down.release = () => {\n    if (!up.isDown && adventuress.vx === 0) {\n      adventuress.vy = 0;\n      adventuress.show(adventuress.states.down);\n    }\n  };\n  \n  //Set the game's current state to `play`\n  state = play;\n \n  //Start the game loop\n  gameLoop();\n}\n\nfunction gameLoop(){\n\n  //Loop this function 60 times per second\n  requestAnimationFrame(gameLoop);\n\n  //Update the current game state:\n  state();  \n\n  //Render the stage\n  renderer.render(stage);\n}\n\nfunction play() {\n\n  //use the adventuress's velocity to make it move\n  adventuress.x += adventuress.vx;\n  adventuress.y += adventuress.vy;\n\n  //Contain the adventuress inside the area of the dungeon\n  contain(adventuress, {x: 28, y: 10, width: 488, height: 480});\n\n  //Set `adventuressHit` to `false` before checking for a collision\n  let adventuressHit = false;\n\n  //Loop through all the sprites in the `enemies` array\n  blobs.forEach(blob => {\n\n    //Move the blob\n    blob.y += blob.vy;\n\n    //Check the blob's screen boundaries\n    let blobHitsWall = contain(blob, {x: 28, y: 10, width: 488, height: 480});\n\n    //If the blob hits the top or bottom of the stage, reverse\n    //its direction\n    if(blobHitsWall) {\n      if (blobHitsWall.has(\"top\") || blobHitsWall.has(\"bottom\")) {\n        blob.vy *= -1;\n      }\n    }\n\n    //Test for a collision. If any of the enemies are touching\n    //the adventuress, set `adventuressHit` to `true`\n    if(b.hitTestRectangle(adventuress, blob)) {\n      adventuressHit = true;\n    }\n  });\n\n  //If the adventuress is hit...\n  if(adventuressHit) {\n\n    //Make the adventuress semi-transparent\n    adventuress.alpha = 0.5;\n\n    //Reduce the width of the health bar's inner rectangle by 1 pixel\n    healthBar.outer.width -= 1;\n\n  } else {\n\n    //Make the adventuress fully opaque (non-transparent) if it hasn't been hit\n    adventuress.alpha = 1;\n  }\n\n  //Check for a collision between the adventuress and the treasure\n  if (b.hitTestRectangle(adventuress, treasure)) {\n\n    //If the treasure is touching the adventuress, center it over the adventuress\n    treasure.x = adventuress.x + 8;\n    treasure.y = adventuress.y + 8;\n  }\n\n  //Does the adventuress have enough health? If the width of the `innerBar`\n  //is less than zero, end the game and display \"You lost!\"\n  if (healthBar.outer.width < 0) {\n    state = end;\n    message.text = \"You lost!\";\n  }\n\n  //If the adventuress has brought the treasure to the exit,\n  //end the game and display \"You won!\"\n  if (b.hitTestRectangle(treasure, door)) {\n    state = end;\n    message.text = \"You won!\";\n  } \n}\n\nfunction end() {\n  gameScene.visible = false;\n  gameOverScene.visible = true;\n}\n\n//The `randomInt` helper function\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n//The `keyboard` helper function\nfunction keyboard(keyCode) {\n  let key = {};\n  key.code = keyCode;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event  => {\n    if (event.keyCode === key.code) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n    }\n    event.preventDefault();\n  };\n\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.keyCode === key.code) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n    }\n    event.preventDefault();\n  };\n\n  //Attach event listeners\n  window.addEventListener(\n    \"keydown\", key.downHandler.bind(key), false\n  );\n  window.addEventListener(\n    \"keyup\", key.upHandler.bind(key), false\n  );\n\n  //Return the key object\n  return key;\n}\n\n//The contain helper function\nfunction contain(sprite, container) {\n\n  //Create a set called `collision` to keep track of the\n  //boundaries with which the sprite is colliding\n  let collision = new Set();\n\n  //Left\n  if (sprite.x < container.x) {\n    sprite.x = container.x;\n    collision.add(\"left\");\n  }\n\n  //Top\n  if (sprite.y < container.y) {\n    sprite.y = container.y;\n    collision.add(\"top\");\n  }\n\n  //Right\n  if (sprite.x + sprite.width > container.width) {\n    sprite.x = container.width - sprite.width;\n    collision.add(\"right\");\n  }\n\n  //Bottom\n  if (sprite.y + sprite.height > container.height) {\n    sprite.y = container.height - sprite.height;\n    collision.add(\"bottom\");\n  }\n\n  //If there were no collisions, set `collision` to `undefined`\n  if (collision.size === 0) collision = undefined;\n\n  //Return the `collision` value\n  return collision;\n}\n\n\n\n\n"]}